// app/api/uon/route.ts

import { NextResponse } from "next/server";

export async function POST(req: Request) {
  try {
    const data = await req.json();

    const { name, phone, comment } = data;

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—è
    if (!name || !phone) {
      return NextResponse.json(
        { ok: false, message: "–ò–º—è –∏ —Ç–µ–ª–µ—Ñ–æ–Ω –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã" },
        { status: 400 }
      );
    }

    // –§–æ—Ä–º–∏—Ä—É–µ–º URL –∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—Ä–æ—Å–∞ –≤ UON
    const API_KEY = process.env.UON_API_KEY || "88ub76SBP0qPFOKn1td61729529225";
    const API_URL = `https://api.u-on.ru/${API_KEY}/lead/create.json`;

    const body = {
      name,
      phone,
      comment,
      source: "–°–∞–π—Ç Adria Travel",
    };

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –≤ UON
    const response = await fetch(API_URL, {
      method: "POST",
      headers: {
        "Content-Type": "application/json; charset=utf-8",
      },
      body: JSON.stringify(body),
    });

    const result = await response.json();

    console.log("üîπ UON response:", result);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ø–µ—à–Ω–æ—Å—Ç—å
    if (result?.lead_id) {
      return NextResponse.json({
        ok: true,
        message: "–ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞",
        lead_id: result.lead_id,
      });
    } else {
      return NextResponse.json(
        { ok: false, message: result?.error || "UON –æ—Ç–∫–ª–æ–Ω–∏–ª –∑–∞–ø—Ä–æ—Å" },
        { status: 400 }
      );
    }
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ UON:", error);
    return NextResponse.json(
      { ok: false, message: "–û—à–∏–±–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ", error: String(error) },
      { status: 500 }
    );
  }
}
