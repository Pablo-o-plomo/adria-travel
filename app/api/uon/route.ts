import { NextResponse } from "next/server";

export async function POST(req: Request) {
  try {
    const { name, phone, email, comment } = await req.json();

    // üîë –î–∞–Ω–Ω—ã–µ –¥–ª—è UON.Travel
    const apiKey = "88ub76SBP0qPFOKn1td61729529225";
    const accountId = "61098";

    // üöÄ –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–ª–æ –∑–∞–ø—Ä–æ—Å–∞
    const payload = {
      key: apiKey,
      title: "–ó–∞—è–≤–∫–∞ —Å —Å–∞–π—Ç–∞ Adria Travel",
      client_name: name,
      client_phone: phone,
      client_email: email || "",
      note: comment || "",
      source: "Adria Travel ‚Äî —Å–∞–π—Ç",
    };

    // üì° –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ UON.Travel
    const res = await fetch(`https://api.u-on.ru/${accountId}/lead/add.json`, {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify(payload),
    });

    const result = await res.json();
    console.log("‚úÖ –û—Ç–≤–µ—Ç UON:", result);

    if (result.error) {
      throw new Error(result.error);
    }

    return NextResponse.json({ ok: true, message: "–ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!", result });
  } catch (error: any) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ:", error);
    return NextResponse.json(
      { ok: false, message: error.message || "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –¥–∞–Ω–Ω—ã—Ö –≤ UON" },
      { status: 500 }
    );
  }
}
